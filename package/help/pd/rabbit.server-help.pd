#N canvas 156 123 790 713 12;
#X obj 50 518 rabbit.server;
#X floatatom 106 377 5 0 0 0 - - - 0;
#X floatatom 79 593 5 0 0 0 - - - 0;
#X text 120 593 parameter id;
#X floatatom 108 571 5 0 0 0 - - - 0;
#X text 148 571 number of connected clients;
#X msg 74 266 getport;
#X text 122 430 remove parameter;
#N canvas 29 44 803 485 parameter-in-groups 0;
#X msg 67 89 expose i group1 int1;
#X msg 86 117 expose i group2 int2;
#X floatatom 296 185 5 0 0 0 - - - 0;
#X msg 297 350 remove group1;
#X msg 629 414 info group1 int1;
#X floatatom 132 185 5 0 0 0 - - - 0;
#X msg 132 207 group1 int1 \$1;
#X msg 47 61 expose i group1 g2 int1;
#X msg 630 386 info group1 g2 int1;
#X msg 276 302 remove group1 g2 int1;
#X msg 296 207 group1 g2 int1 \$1;
#X obj 47 432 s server;
#X text 45 35 expose parameter in group;
#X text 128 160 setting value;
#X text 273 280 remove a parameter in a group;
#X text 295 329 remove a group including all parameters;
#X text 627 362 parameter information;
#X connect 0 0 11 0;
#X connect 1 0 11 0;
#X connect 2 0 10 0;
#X connect 3 0 11 0;
#X connect 4 0 11 0;
#X connect 5 0 6 0;
#X connect 6 0 11 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X restore 518 299 pd parameter-in-groups;
#N canvas 330 109 495 376 min-max-and-info 0;
#X msg 47 217 setmin group1 g2 int1 0;
#X msg 59 242 setmax group1 g2 int1 100;
#X obj 44 330 s server;
#X text 41 34 set min and max;
#X text 237 76 get min and max;
#X text 44 191 groups;
#X obj 44 121 s server;
#X msg 358 102 getmin sensor;
#X msg 239 102 getmax sensor;
#X msg 44 61 setmin sensor 10;
#X msg 59 84 setmax sensor 11;
#X msg 91 270 getmin group1 g2 int1;
#X msg 91 294 getmax group1 g2 int1;
#X connect 0 0 2 0;
#X connect 1 0 2 0;
#X connect 7 0 6 0;
#X connect 8 0 6 0;
#X connect 9 0 6 0;
#X connect 10 0 6 0;
#X connect 11 0 2 0;
#X connect 12 0 2 0;
#X restore 517 389 pd min-max-and-info;
#X obj 383 639 pdcontrol;
#X msg 383 596 browse http://client.rabbitcontrol.cc/#127.0.0.1:10000;
#X msg 502 620 browse http://client.rabbitcontrol.cc;
#N canvas 405 129 642 804 rabbithole 0;
#X text 43 22 Rabbithole allows you to access your parameters over the internet.;
#X obj 46 94 pdcontrol;
#X msg 46 69 browse https://rabbithole.rabbitcontrol.cc;
#X obj 46 751 pdcontrol;
#X msg 46 712 browse https://rabbithole.rabbitcontrol.cc/client/index.html#pd_test, f 62;
#X text 74 505 Be aware that public tunnels are limited and for testing purpose only. You can register a user-account and get access to private tunnels.;
#X text 45 691 Open the client directly:;
#X msg 46 242 expose f sensor2;
#X msg 59 264 expose i integer2;
#X text 43 215 expose some parameters;
#X obj 46 570 print from_rabbithole;
#X msg 421 416 listen 20000;
#X text 419 383 additionally start listening on port 20000, f 25;
#X text 45 607 Next \, open rabbithole.rabbitcontrol.cc in your browser \, set the public tunnel name to pd_test and click "Open Controls". The client should open and you should see the exposed parameters.;
#X obj 46 435 rabbit.server, f 14;
#X msg 79 321 rabbithole wss://rabbithole.rabbitcontrol.cc/public/rcpserver/connect?key=pd_test, f 37;
#X text 74 464 optional argument: @rabbithole wss://rabbithole.rabbitcontrol.cc/public/rcpserver/connect?key=pd_test, f 72;
#X text 44 144 Create a rabbit.server and use a rabbithole endpoint to a private or public tunnel (use private tunnel with a rabbithole account).;
#X text 77 297 set or change rabbithole endpoint;
#X msg 211 403 rabbithole;
#X text 211 382 close rabbithole;
#X connect 2 0 1 0;
#X connect 4 0 3 0;
#X connect 7 0 14 0;
#X connect 8 0 14 0;
#X connect 11 0 14 0;
#X connect 14 0 10 0;
#X connect 15 0 14 0;
#X connect 19 0 14 0;
#X restore 517 489 pd rabbithole;
#N canvas 143 174 479 370 parameter-info 0;
#X obj 47 293 s server;
#X text 94 126 get value;
#X text 120 179 get id;
#X text 143 232 get type;
#X text 43 28 get information about parameters;
#X text 43 50 output: info <groups-label-list> <value> <id> <type>;
#X msg 47 83 getinfo sensor;
#X msg 97 148 getvalue sensor;
#X msg 120 200 getid sensor;
#X msg 143 253 gettype sensor;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X restore 517 359 pd parameter-info;
#X obj 86 496 r server;
#X text 485 299 -->;
#X text 485 329 -->;
#X text 485 389 -->;
#X text 485 489 -->;
#X msg 50 214 listen 10000;
#X msg 60 237 listen 0;
#X text 131 238 (0 or negative number to close);
#X text 136 266 get port currently listening to;
#X text 149 215 listen message to set or change port;
#N canvas 118 153 500 362 parameter-options 0;
#X obj 56 138 s server;
#X text 53 38 readonly;
#X obj 290 158 s server;
#X text 287 38 order;
#X obj 290 73 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X text 52 221 expose with options;
#X obj 53 273 s server;
#X msg 56 73 setreadonly sensor 1;
#X msg 290 93 setorder sensor \$1;
#X msg 301 117 getorder sensor;
#X msg 71 97 getreadonly sensor;
#X msg 53 242 expose f sensor3 @min 0 @max 10 @order 3 @readonly;
#X connect 4 0 8 0;
#X connect 7 0 0 0;
#X connect 8 0 2 0;
#X connect 9 0 2 0;
#X connect 10 0 0 0;
#X connect 11 0 6 0;
#X restore 517 329 pd parameter-options;
#X text 485 359 -->;
#X obj 138 545 print server_info;
#X obj 47 89 rabbit.server;
#X text 156 89 - rcp server;
#X text 22 673 see also:;
#X obj 100 672 rabbit.client;
#N canvas 103 63 873 530 parameter-types 0;
#X obj 103 477 s server;
#X msg 115 270 expose i integer;
#X msg 127 302 expose t toggle;
#X msg 139 334 expose s mysymbol;
#X msg 151 366 expose b mybang;
#X msg 103 238 expose f sensor1;
#X text 27 83 types:;
#X text 37 102 f: float;
#X text 37 119 i: integer;
#X text 37 137 t: toggle (a boolean);
#X text 37 155 s: symbol (a string);
#X text 37 173 b: bang;
#X text 27 48 expose <type> <group1> <group2> ... <label>;
#X obj 436 315 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 436 335 toggle \$1;
#X msg 453 373 mysymbol test;
#X floatatom 393 204 5 0 0 0 - - - 0;
#X msg 410 282 integer \$1;
#X floatatom 410 261 5 0 0 0 - - - 0;
#X msg 453 395 mysymbol test\ 123;
#X msg 393 226 sensor1 \$1;
#X msg 472 436 mybang;
#X text 389 180 set value;
#X obj 393 477 s server;
#X text 26 25 expose parameters - types;
#X msg 696 270 remove integer;
#X msg 706 302 remove toggle;
#X msg 716 334 remove mysymbol;
#X msg 726 366 remove mybang;
#X obj 686 477 s server;
#X msg 686 238 remove sensor1;
#X text 682 206 remove parameter;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 13 0 14 0;
#X connect 14 0 23 0;
#X connect 15 0 23 0;
#X connect 16 0 20 0;
#X connect 17 0 23 0;
#X connect 18 0 17 0;
#X connect 19 0 23 0;
#X connect 20 0 23 0;
#X connect 21 0 23 0;
#X connect 25 0 29 0;
#X connect 26 0 29 0;
#X connect 27 0 29 0;
#X connect 28 0 29 0;
#X connect 30 0 29 0;
#X restore 518 269 pd parameter-types;
#X msg 87 328 expose f sensor;
#X msg 106 399 sensor \$1;
#X msg 125 450 remove sensor;
#X text 487 270 -->;
#X text 517 239 more about parameters;
#X text 184 501 server information;
#X text 47 192 (1) start listening;
#X text 85 309 (2) expose a parameter;
#X text 104 357 (3) set value;
#X text 381 575 (4) open the webclient and connect to localhost:100000;
#X obj 50 619 print rcp_server;
#N canvas 49 85 509 450 raw 0;
#X obj 121 239 rabbit.server -raw;
#X msg 44 153 expose f sensor;
#X floatatom 151 367 5 0 0 0 - - - 0;
#X text 192 367 parameter id;
#X floatatom 182 344 5 0 0 0 - - - 0;
#X text 222 344 number of connected clients;
#X obj 213 319 print server_info;
#X obj 121 393 print rcp_server;
#X msg 121 202 sensor \$1;
#X floatatom 121 181 5 0 0 0 - - - 0;
#N canvas 131 166 431 343 sender 0;
#X obj 63 284 netsend -u -b;
#X obj 245 64 list prepend connect;
#X obj 63 133 list prepend send;
#X obj 220 109 list;
#X obj 40 76 t b a b;
#X msg 40 212 disconnect;
#X obj 220 133 list trim;
#X obj 63 159 list trim;
#X obj 40 22 inlet;
#X obj 245 22 inlet;
#X text 167 285 binary udp sender;
#X connect 1 0 3 1;
#X connect 2 0 7 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 4 1 2 0;
#X connect 4 2 3 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 4 0;
#X connect 9 0 1 0;
#X restore 244 272 pd sender;
#X text 222 180 binary udp receiver (output from);
#X obj 44 125 loadbang;
#X obj 244 202 netreceive -u -b -f 12002;
#X text 43 22 Usind the -raw flag allows you to handle network traffic yourself. Another input and output are created for raw data-input and data-output. Feed the server with a list of binary data and send the data rabbit.server provides on the data-output port:;
#X connect 0 0 7 0;
#X connect 0 1 2 0;
#X connect 0 2 4 0;
#X connect 0 3 6 0;
#X connect 0 4 10 0;
#X connect 1 0 0 0;
#X connect 8 0 0 0;
#X connect 9 0 8 0;
#X connect 12 0 1 0;
#X connect 13 0 0 1;
#X connect 13 1 10 1;
#X restore 517 439 pd raw;
#X text 485 439 -->;
#X msg 333 499 getrcpversion;
#N canvas 162 146 342 223 META 0;
#X text 12 25 KEYWORDS remote control;
#X text 12 185 AUTHOR Ingo Randolf;
#X text 12 65 INLET_0 data;
#X text 12 85 OUTLET_0 server outlet;
#X text 12 105 OUTLET_1 parameter id;
#X text 12 145 OUTLET_3 info outlet;
#X text 12 125 OUTLET_2 number of connected clients;
#X text 12 45 LICENSE GPL v3;
#X text 12 5 DESCRIPTION RabbitControl server;
#X restore 561 27 pd META;
#X text 17 21 ()();
#X text 24 35 oO RabbitControl for Pd;
#X text 31 48 x;
#X text 47 123 Rabbitcontrol allows you to expose values (parameters) to be controlled by a remote system. [rabbit.client] can receive the exposed parameters and can control their values.;
#X obj 162 499 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X connect 0 0 43 0;
#X connect 0 1 2 0;
#X connect 0 2 4 0;
#X connect 0 3 27 0;
#X connect 1 0 34 0;
#X connect 6 0 0 0;
#X connect 11 0 10 0;
#X connect 12 0 10 0;
#X connect 15 0 0 0;
#X connect 20 0 0 0;
#X connect 21 0 0 0;
#X connect 33 0 0 0;
#X connect 34 0 0 0;
#X connect 35 0 0 0;
#X connect 46 0 0 0;
#X connect 52 0 0 0;
